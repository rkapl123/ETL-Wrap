# common ETL-Wrap parameters:
%config = (
	sensitive => {
			db => {user => "sensitiveDBuserInfo", pwd => "sensitiveDBPwdInfo"},
			ftp => {user => "sensitiveFTPuserInfo", pwd => "sensitiveFTPPwdInfo"}, #user/pwd for prefix <prefix> (prefix is set in $load[N]{<DB|FTP>}{prefix})
			smtpAuth => {"user" => 'sensitiveSMTPuserInfo', pwd => 'sensitiveSMTPPwdInfo'},
		},
	folderEnvironmentMapping => {Test => "Test", Dev => "Dev", "" => "Prod"},
	errmailaddress => 'your@mail.address', # address(es) for error mails, usually overridden with centralLogHandling.config
	errmailsubject => "No errMailSubject defined", # initial part for error mail subject (can be enhanced using setErrSubject with context information), overridden with centralLogHandling.config
	fromaddress => 'your@mail.address',
	smtpServer => "your.mail.server", # smtp server for (error) mail sending
	smtpAuth => {"user" => 'your@mail.address', pwd => 'your@mail.address.pwd'}, # authentication for smtp server (with user and pwd)
	smtpTimeout => 60, # timeout for smtp response
	testerrmailaddress => 'your@mail.address', # error mail address in non prod environment
	logCheckHoliday => "AT", # default holiday for determining business days in log checking (checkLogExist.pl)
	logs_to_be_ignored_in_nonprod => "test2|dontcheckthisone", # don't check log files for these tasks (regexp)
	process => {
		logRootPath => "C:/dev/Logs",
		historyFolder => "History",
		redoDir => "C:/dev/ETL/redo",
		retrySecondsErr => 60*5, # 5 minutes pause with error retries
		retrySecondsPlanned => 60*15, # 15 minutes pause with planned retries
	}
);

# ETL-Wrap DB parameters:
$config{DB} = {
	server => {Prod => "your_db_server", Test => "your_db_server"}, # hash of env => servername assignments
	cutoffYr2000 => 60, # Cutoff for deciding when 2 digit years should be interpreted as 19xx or 20xx. (before = 19, after = 20)
	database => "pubs", # default database
	DSNTrusted => 'driver={SQL Server};Server=$DB->{server}{$execute->{env}};database=$DB->{database};TrustedConnection=Yes;', # connection string for trusted conn (using interpolated variables for server and database)
	DSNUntrusted => 'driver={SQL Server};Server=$DB->{server}{$execute->{env}};database=$DB->{database};uid=$DB->{$DB->{prefix}}{user};pwd=$DB->{$DB->{prefix}}{pwd};', # connection string for untrusted conn
	dontWarnOnNotExistingFields => 0, # suppress warning in storeInDB when fields don't exist
	isTrusted => 1, # use DSNTrusted if true, DSNUntrusted otherwise
	longreadlen => 1024, # DBI setting for minimum buffer retrieving LOB data
	schemaName => "dbo", # default schema name (especially important for MS SQL Server)
};

# ETL-Wrap FTP parameters:
$config{FTP} = {
	maxConnectionTries => 5, # try at most to connect maxConnectionTries, then give up
	plinkInstallationPath => "C:/dev/ETL/putty/PLINK.EXE", # path to external ssh executable for NET::SFTP::Foreign
};

# ETL-Wrap FILE parameters:
$config{File} = {
};

